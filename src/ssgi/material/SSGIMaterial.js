import { GLSL3, Matrix4, ShaderMaterial, Uniform, Vector2, Vector3, Vector4 } from "three"
import vertexShader from "../../utils/shader/basic.vert"
import fragmentShader from "../shader/ssgi.frag"
// eslint-disable-next-line camelcase
import ssgi_utils from "../shader/ssgi_utils.glsl"

const binsArr = [
	[0, 0, 64, 64],
	[64, 0, 128, 64],
	[0, 64, 128, 128],
	[128, 0, 192, 64],
	[192, 0, 256, 64],
	[128, 64, 256, 128],
	[0, 128, 128, 256],
	[128, 128, 256, 256],
	[256, 0, 320, 64],
	[320, 0, 384, 64],
	[256, 64, 384, 128],
	[384, 0, 448, 64],
	[448, 0, 512, 64],
	[384, 64, 512, 128],
	[256, 128, 512, 256],
	[0, 256, 256, 512],
	[256, 256, 512, 512],
	[512, 0, 640, 128],
	[640, 0, 768, 128],
	[512, 128, 768, 256],
	[768, 0, 896, 128],
	[896, 0, 960, 64],
	[960, 0, 1024, 32],
	[960, 32, 1024, 64],
	[896, 64, 960, 128],
	[960, 64, 1024, 96],
	[960, 96, 1024, 128],
	[768, 128, 1024, 256],
	[512, 256, 1024, 512],
	[0, 512, 1024, 1024],
	[1024, 0, 1088, 32],
	[1024, 32, 1088, 64],
	[1088, 0, 1152, 64],
	[1024, 64, 1088, 96],
	[1024, 96, 1056, 128],
	[1056, 96, 1088, 128],
	[1088, 64, 1152, 96],
	[1088, 96, 1120, 128],
	[1120, 96, 1152, 128],
	[1152, 0, 1216, 64],
	[1216, 0, 1280, 64],
	[1152, 64, 1216, 96],
	[1152, 96, 1184, 128],
	[1184, 96, 1216, 128],
	[1216, 64, 1280, 96],
	[1216, 96, 1280, 128],
	[1024, 128, 1088, 192],
	[1088, 128, 1152, 192],
	[1024, 192, 1152, 256],
	[1152, 128, 1280, 192],
	[1152, 192, 1184, 208],
	[1152, 208, 1184, 224],
	[1184, 192, 1216, 208],
	[1184, 208, 1200, 216],
	[1184, 216, 1200, 224],
	[1200, 208, 1216, 224],
	[1152, 224, 1184, 256],
	[1184, 224, 1192, 232],
	[1192, 224, 1200, 232],
	[1184, 232, 1192, 240],
	[1192, 232, 1200, 236],
	[1192, 236, 1200, 240],
	[1200, 224, 1208, 232],
	[1208, 224, 1216, 232],
	[1200, 232, 1208, 240],
	[1208, 232, 1216, 240],
	[1184, 240, 1200, 248],
	[1184, 248, 1200, 256],
	[1200, 240, 1216, 256],
	[1216, 192, 1280, 224],
	[1216, 224, 1224, 228],
	[1216, 228, 1220, 232],
	[1220, 228, 1224, 232],
	[1224, 224, 1232, 232],
	[1216, 232, 1220, 236],
	[1220, 232, 1224, 236],
	[1216, 236, 1220, 240],
	[1220, 236, 1224, 238],
	[1220, 238, 1224, 240],
	[1224, 232, 1232, 236],
	[1224, 236, 1228, 238],
	[1224, 238, 1228, 240],
	[1228, 236, 1232, 240],
	[1232, 224, 1248, 240],
	[1216, 240, 1224, 248],
	[1224, 240, 1232, 244],
	[1224, 244, 1232, 248],
	[1216, 248, 1232, 256],
	[1232, 240, 1248, 256],
	[1248, 224, 1280, 256],
	[1280, 0, 1408, 64],
	[1280, 64, 1344, 128],
	[1344, 64, 1408, 128],
	[1408, 0, 1536, 128],
	[1280, 128, 1344, 192],
	[1344, 128, 1408, 192],
	[1280, 192, 1312, 224],
	[1312, 192, 1344, 208],
	[1312, 208, 1344, 224],
	[1280, 224, 1312, 256],
	[1312, 224, 1344, 240],
	[1312, 240, 1344, 256],
	[1344, 192, 1376, 224],
	[1376, 192, 1408, 224],
	[1344, 224, 1408, 256],
	[1408, 128, 1536, 192],
	[1408, 192, 1472, 224],
	[1408, 224, 1440, 240],
	[1408, 240, 1440, 256],
	[1440, 224, 1472, 256],
	[1472, 192, 1536, 256],
	[1024, 256, 1152, 384],
	[1152, 256, 1216, 320],
	[1216, 256, 1232, 272],
	[1232, 256, 1248, 264],
	[1232, 264, 1240, 272],
	[1240, 264, 1244, 266],
	[1240, 266, 1244, 268],
	[1244, 264, 1248, 268],
	[1240, 268, 1248, 272],
	[1216, 272, 1248, 288],
	[1248, 256, 1280, 272],
	[1248, 272, 1280, 288],
	[1216, 288, 1280, 320],
	[1152, 320, 1280, 384],
	[1024, 384, 1280, 512],
	[1280, 256, 1344, 320],
	[1344, 256, 1408, 288],
	[1344, 288, 1408, 320],
	[1280, 320, 1408, 384],
	[1408, 256, 1536, 384],
	[1280, 384, 1536, 512],
	[1536, 0, 1792, 128],
	[1536, 128, 1664, 256],
	[1664, 128, 1792, 256],
	[1792, 0, 1920, 128],
	[1920, 0, 1984, 64],
	[1984, 0, 2048, 64],
	[1920, 64, 2048, 128],
	[1792, 128, 1920, 256],
	[1920, 128, 2048, 256],
	[1536, 256, 2048, 512],
	[1024, 512, 2048, 1024]
]

const bins = binsArr.map(([x, y, z, w]) => new Vector4(x, y, z, w))

export class SSGIMaterial extends ShaderMaterial {
	constructor() {
		super({
			type: "SSGIMaterial",

			uniforms: {
				directLightTexture: new Uniform(null),
				accumulatedTexture: new Uniform(null),
				normalTexture: new Uniform(null),
				depthTexture: new Uniform(null),
				diffuseTexture: new Uniform(null),
				emissiveTexture: new Uniform(null),
				velocityTexture: new Uniform(null),
				blueNoiseTexture: new Uniform(null),
				backSideDepthTexture: new Uniform(null),
				envMap: new Uniform(null),
				bins: new Uniform(bins),
				envSize: new Uniform(new Vector2(2048, 1024)),
				projectionMatrix: new Uniform(new Matrix4()),
				inverseProjectionMatrix: new Uniform(new Matrix4()),
				cameraMatrixWorld: new Uniform(new Matrix4()),
				viewMatrix: new Uniform(new Matrix4()),
				cameraNear: new Uniform(0),
				cameraFar: new Uniform(0),
				rayDistance: new Uniform(0),
				thickness: new Uniform(0),
				r3Offset: new Uniform(new Vector3()),
				frames: new Uniform(0),
				envBlur: new Uniform(0),
				maxRoughness: new Uniform(0),
				maxEnvMapMipLevel: new Uniform(0),
				maxEnvLuminance: new Uniform(0),
				envMapPosition: new Uniform(new Vector3()),
				envMapSize: new Uniform(new Vector3()),
				viewMatrix: new Uniform(new Matrix4()),
				texSize: new Uniform(new Vector2()),
				blueNoiseRepeat: new Uniform(new Vector2()),
				envMapSize: new Uniform(new Vector3()),
				cameraPos: new Uniform(new Vector3())
			},

			defines: {
				steps: 20,
				refineSteps: 5,
				spp: 1,
				directLightMultiplier: 1,
				numBins: bins.length,
				CUBEUV_TEXEL_WIDTH: 0,
				CUBEUV_TEXEL_HEIGHT: 0,
				CUBEUV_MAX_MIP: 0,
				vWorldPosition: "worldPos"
			},

			fragmentShader: fragmentShader.replace("#include <utils>", ssgi_utils),
			vertexShader,

			toneMapped: false,
			depthWrite: false,
			depthTest: false,

			glslVersion: GLSL3
		})
	}
}
